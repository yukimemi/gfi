# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: yukimemi/golang-ghr
  # This is the build pipeline. Pipelines are the core of wercker
  # Read more about pipelines on our dev center
  # http://devcenter.wercker.com/docs/pipelines/index.html

  # You can also use services such as databases. Read more on our dev center:
  # http://devcenter.wercker.com/docs/services/index.html
  # services:
  # - postgres
  # http://devcenter.wercker.com/docs/services/postgresql.html

  # - mongo
  # http://devcenter.wercker.com/docs/services/mongodb.html

build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Verbose
    - script:
      name: go version
      code: |
        go version
        ls -la

    # Set git config
    - script:
      name: git config
      code: |
        git config --global user.name yukimemi
        git config --global user.email yukimemi@gmail.com

    # Gets the dependencies
    - script:
      name: go get
      code: |
        go get

    # Get vendor dependencies
    - script:
      name: gom install
      code: |
        gom install

    # Test the project
    - script:
      name: go test
      code: |
        go test

    # Cross compile
    - script:
      name: cross compile
      code: |
        compile

deploy:
  steps:
    # Get app version from git tag.
    - robertcsakany/version-from-git-tag

    # Release to github
    - script:
      name: ghr release
      code: |
        release

